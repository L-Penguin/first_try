{"remainingRequest":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\src\\views\\BtnPage.vue?vue&type=style&index=0&id=2b4fa041&lang=css&scoped=true&","dependencies":[{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\src\\views\\BtnPage.vue","mtime":1642521186781},{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Task_bridgeMonitor\\svntest2\\vue-cli_programs\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoMiB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBmb250LXNpemU6IDI1cHg7CiAgICBtYXJnaW4tdG9wOiAyNXB4OwogICAgbWFyZ2luLWJvdHRvbTogMjVweDsKfQoKLmVsLWhlYWRlciwgLmVsLWZvb3RlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjNDMEQxOwogICAgY29sb3I6ICMzMzM7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBsaW5lLWhlaWdodDogNjBweDsKICAgIGZvbnQtc2l6ZTogMzVweDsKICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKfQoKLmVsLWFzaWRlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNEM0RDRTY7CiAgICBjb2xvcjogIzMzMzsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGxpbmUtaGVpZ2h0OiAzMHB4Owp9CgouZWwtbWFpbiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTlFRUYzOwogICAgY29sb3I6ICMzMzM7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBsaW5lLWhlaWdodDogNTBweDsKfQoKLyogYm9keSA+IC5lbC1jb250YWluZXIgewogICAgCn0gKi8KCi5lbC1jb250YWluZXI6bnRoLWNoaWxkKDUpIC5lbC1hc2lkZSwKLmVsLWNvbnRhaW5lcjpudGgtY2hpbGQoNikgLmVsLWFzaWRlIHsKICAgIGxpbmUtaGVpZ2h0OiAyNjBweDsKfQoKLmVsLWNvbnRhaW5lcjpudGgtY2hpbGQoNykgLmVsLWFzaWRlIHsKICAgIGxpbmUtaGVpZ2h0OiAzMjBweDsKfQoKLmNvb3JkaW5hdG9yUGFydCB7CiAgICB3aWR0aDogOTAlOwogICAgbWFyZ2luOiBhdXRvOwogICAgbWFyZ2luLXRvcDogMTBweDsKICAgIGJvcmRlcjogMnB4IGdyb292ZSByZWQ7IAp9CgouYnRuUGFydCB7CiAgICB3aWR0aDogOTAlOwogICAgbWFyZ2luOiBhdXRvOwogICAgbWFyZ2luLXRvcDogMTBweDsKICAgIGJvcmRlcjogMnB4IGdyb292ZSBibHVlOyAKfQoKLyog6K6+572u5oyJ6ZKu5qC35byPICovCi5zZXR0aW5nQnRuIHsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHdpZHRoOiAyMDBweDsKICAgIHdpZHRoOiAxMDBweDsKICAgIG1hcmdpbi1yaWdodDogNTBweDsKICAgIG1hcmdpbi1ib3R0b206IDI1cHg7Cn0K"},{"version":3,"sources":["BtnPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8YA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BtnPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div id=\"BtnPage\">\r\n        <el-container>\r\n            <!-- 用户信息界面 -->\r\n            <el-aside width=\"200px\">\r\n                <h2>用户名:&nbsp;{{user}}</h2>\r\n                    <icon  type=\"md-power\" size=\"30\" @click=\"logout\" style=\"cursor: pointer;\"/><br>\r\n                    <h3>协调器状态:<br>编号:{{\" \"+num+' 号'}}<br>电量:{{\" \"+electricity+' V'}}<br>温度:{{\" \"+temper+' °C'}}</h3>\r\n            </el-aside>\r\n            <!-- 按钮展示界面 -->\r\n            <el-container>\r\n                <!-- <el-header>按钮展示</el-header> -->\r\n                <el-main>\r\n                    <div class=\"coordinatorPart\">\r\n                        <h1>协调器</h1>\r\n                        <MyButton v-for=\"obj in coordinatorData\" :address=\"obj.MACADDRESS\" :key=\"obj.ID\" type=\"coordinator\" matchId=\"\"/>\r\n                    </div>\r\n\r\n                    <div v-for=\"(arr, index) of matchArr\" :id=\"'classification:' + arr[0].CLASSIFICATION\" :key=\"index\" class=\"btnPart\">\r\n                        <h1>classification:{{arr[0].INSTALLADDRESS | addressSlice}}</h1>\r\n                        <MyButton v-for=\"(obj, index) of matchArr[arr[0].CLASSIFICATION-1]\" :matchId=\"obj.MACADDRESS\" :address=\"obj.INSTALLADDRESS\" ref=\"button\" :key=\"index\" type=\"node\"/>\r\n                    </div>\r\n                </el-main>\r\n            </el-container>\r\n            <!-- 设置页面 -->\r\n            <el-drawer\r\n            title=\"设置页面\"\r\n            :before-close=\"handleClose\"\r\n            :visible.sync=\"dialog\"\r\n            direction=\"rtl\"\r\n            custom-class=\"demo-drawer\"\r\n            ref=\"drawer\"\r\n            >\r\n            <div class=\"demo-drawer__content\">\r\n                <el-form :model=\"form\">\r\n                    <h2>报警阀值设置</h2>\r\n                    <el-form-item label=\"alarmThreshold1:\" style=\"margin-left: 20%; margin-right: 20%; margin-top: 20px\">\r\n                        <el-input v-model.number=\"form.alarmThreshold1\" autocomplete=\"off\" style=\"width: 50%;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"alarmThreshold2:\" style=\"margin-left: 20%; margin-right: 20%; margin-top: 20px\">\r\n                        <el-input v-model.number=\"form.alarmThreshold2\" autocomplete=\"off\" style=\"width: 50%;\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"alarmThreshold3:\" style=\"margin-left: 20%; margin-right: 20%; margin-top: 20px\">\r\n                        <el-input v-model.number=\"form.alarmThreshold3\" autocomplete=\"off\" style=\"width: 50%;\"></el-input>\r\n                    </el-form-item>\r\n                    <h2>子节点mac地址配置</h2>\r\n                    <el-form-item label=\"阻尼器编号\" style=\"margin-left: 25%; margin-right: 25%; margin-top: 20px\">\r\n                        <el-select v-model=\"form.selector\">\r\n                            <p v-for=\"(arr, index) in matchArr\" :key=\"index\"><el-option v-for=\"(obj, index) in matchArr[arr[0].CLASSIFICATION-1]\" :label=\"obj.INSTALLADDRESS\" :value=\"obj.INSTALLADDRESS\" :key=\"index\"></el-option></p>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"子字节mac地址:\" style=\"margin-left: 10%; margin-right: 10%; margin-top: 20px\">\r\n                        <el-input v-model=\"macaddress\" autocomplete=\"off\" style=\"width: 70%;\" ></el-input>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div class=\"demo-drawer__footer\" style=\"margin-left: 35%; margin-right: 35%; margin-top: 20%\">\r\n                    <el-button @click=\"cancelForm\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"$refs.drawer.closeDrawer()\" :loading=\"loading\">{{ loading ? '提交中 ...' : '确 定' }}</el-button>\r\n                </div>\r\n            </div>\r\n            </el-drawer>\r\n        </el-container>\r\n        <p style=\"text-align: center; margin-top: 20px;\">\r\n            <button @click=\"dialog=true;alertDialog=false\" class=\"settingBtn\">设置</button>\r\n            <button @click=\"showAllTweets\" class=\"settingBtn\">全部数据</button>\r\n            </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import MyButton from \"./MyButton.vue\"\r\n\r\n    const client = require(\"../client\")\r\n    export default {\r\n        name: \"BtnPage\",\r\n        data() {\r\n            return {\r\n                alertDialog: false, // 设置界面 是否修改\r\n                dialog: false,      // 设置界面是否弹出\r\n                loading: false,     // 设置界面确定按钮是否加载中字样\r\n                user: \"--\",     // 用户名\r\n                btnPartNum: 4,  // 协调器数量\r\n                btnNum: 36,     // 子节点数量\r\n                num: \"--\",\r\n                electricity: \"--\",\r\n                temper: \"--\",\r\n                error: \"\",\r\n                // 报警阀值\r\n                alarmThreshold1: localStorage.getItem(\"alarmThreshold1\") || 150,   \r\n\t\t\t\talarmThreshold2: localStorage.getItem(\"alarmThreshold2\") || 100,\r\n\t\t\t\talarmThreshold3: localStorage.getItem(\"alarmThreshold3\") || 70,\r\n                // 设置页面中显示\r\n                form: {\r\n                    alarmThreshold1: null,\r\n                    alarmThreshold2: null,\r\n                    alarmThreshold3: null,\r\n\r\n                    selector: \"\",\r\n                },\r\n                macaddress: \"\",\r\n                timer: null,\r\n                // 匹配信息数据\r\n                matchData: [],\r\n                // 协调器信息数据\r\n                coordinatorData: [],\r\n                refresh: true,\r\n            }\r\n        },\r\n        computed: {\r\n            // 依据CLASSIFICATION进行分类得到所有种类的CLASSICFICATION数组\r\n            classificationArr() {\r\n                let arr = []\r\n                this.matchData.forEach((obj)=> {\r\n                    if (arr.indexOf(obj.CLASSIFICATION) < 0 || arr.length == 0) {\r\n                        arr.push(obj.CLASSIFICATION)\r\n                    }\r\n                })\r\n                return arr.sort()\r\n            },\r\n            // 按照classification编号分类形成数组后组合的大数组\r\n            matchArr() {\r\n                let arrTotal = []\r\n                let arr = []\r\n                this.classificationArr.forEach((num)=> {\r\n                    this.matchData.forEach((obj)=> {\r\n                        if (obj.CLASSIFICATION === num) {\r\n                            arr.push(obj)\r\n                        }\r\n                    })\r\n                    // 给arr进行降序，arr存储节点数据\r\n                    arr.sort(function(m, n) {\r\n                        if (m.INSTALLADDRESS.split(\"-\")[3] < n.INSTALLADDRESS.split(\"-\")[3]) return -1\r\n                        else if (m.INSTALLADDRESS.split(\"-\")[3] > n.INSTALLADDRESS.split(\"-\")[3]) return 1\r\n                        else return 0\r\n                    })\r\n\r\n                    arrTotal.push(arr)\r\n                    arr = []\r\n                })\r\n                return arrTotal\r\n            },\r\n            // 根据matchArr中的分类顺序形成一个关于macaddress的数组，顺序很重要，顺序为按钮的布置顺序\r\n            matchIdArr() {\r\n                let matchIdArr = []\r\n                this.matchArr.forEach((arr)=> {\r\n                    arr.forEach((obj)=> {\r\n                        matchIdArr.push(obj.MACADDRESS)\r\n                    })\r\n                })\r\n                return matchIdArr\r\n            },        \r\n        },\r\n        components: {MyButton},\r\n        methods: {\r\n            //退出登录，清除localStorage中的用户信息并跳转到登录页\r\n\t\t\tlogout() {\r\n\t\t\t\tlocalStorage.removeItem(\"persons\")\r\n\t\t\t\tthis.$router.push(\"/\")\r\n\t\t\t},\r\n            // 设置界面\r\n            setting() {\r\n                console.log(this.$refs)\r\n                this.openDialog = true\r\n                this.$nextTick(()=>{\r\n                    this.refs.testDialog.init()\r\n                })\r\n\r\n            },\r\n\r\n            // 关闭设置页面前执行\r\n            handleClose(done) {\r\n                if (this.loading) {\r\n                    return;\r\n                }\r\n                // 如果数据没有修改，直接退出\r\n                if (!this.alertDialog) {\r\n                    this.dialog = false\r\n                    return\r\n                }\r\n                //数据被修改，询问是否保存数据\r\n                this.$confirm('确定要提交表单吗？')\r\n                    .then(_ => {\r\n                    this.loading = true;\r\n                    // 同步改动的报警阀值\r\n                    this.alarmThreshold1 = this.form.alarmThreshold1\r\n                    this.alarmThreshold2 = this.form.alarmThreshold2\r\n                    this.alarmThreshold3 = this.form.alarmThreshold3\r\n\r\n                    localStorage.setItem(\"alarmThreshold1\", this.form.alarmThreshold1)\r\n                    localStorage.setItem(\"alarmThreshold2\", this.form.alarmThreshold2)\r\n                    localStorage.setItem(\"alarmThreshold3\", this.form.alarmThreshold3)\r\n\r\n                    // 修改数据库中的macaddress\r\n                    client.modifyMacAddress(this.form.selector, this.macaddress, (error)=> {\r\n                        this.refresh = !this.refresh\r\n                        if (error.length !== 0) {\r\n                            console.log(error)\r\n                        }\r\n                    })\r\n\r\n                    this.timer = setTimeout(() => {\r\n                            done();\r\n                            // 动画关闭需要一定的时间\r\n                            setTimeout(() => {\r\n                                this.loading = false;\r\n                            }, 400);\r\n                        }, 500);\r\n                    })\r\n                    .catch(_ => {});\r\n            },\r\n            // 退出设置界面\r\n            cancelForm() {\r\n                this.loading = false;\r\n                this.dialog = false;\r\n                // 当未确认退出时候，同步form和实际的阀值\r\n                this.form.alarmThreshold1 = this.alarmThreshold1\r\n                this.form.alarmThreshold2 = this.alarmThreshold2\r\n                this.form.alarmThreshold3 = this.alarmThreshold3\r\n\r\n                this.form.selector = this.matchArr[0][0].INSTALLADDRESS\r\n                clearTimeout(this.timer);\r\n            },\r\n\r\n            // 显示所有数据\r\n            showAllTweets() {\r\n                this.$router.push({name:'nodeTablePage', params: {matchId: \"all\"}})\r\n            }\r\n        },\r\n        created() {\r\n            // 将form中报警阀值同步\r\n            this.form.alarmThreshold1 = this.alarmThreshold1\r\n            this.form.alarmThreshold2 = this.alarmThreshold2\r\n            this.form.alarmThreshold3 = this.alarmThreshold3\r\n\r\n\r\n            //如果用户名未登录， 返回空。做判断防止报错\r\n            let judegExist = JSON.parse(localStorage.getItem(\"persons\"))\r\n            if (judegExist) {\r\n                this.user = JSON.parse(localStorage.getItem(\"persons\"))[0].user\r\n            } else {\r\n                this.user = \"未登录!\"\r\n            }\r\n\r\n            client.getRecTweets((error, tweets)=> {\r\n                let index = 0\r\n                if (error.length == 0) {\r\n                    tweets.forEach((tweet)=> {\r\n                        index = 0\r\n                        index = this.matchIdArr.indexOf(tweet.MACADDRESS)\r\n                        if (index >= 0) {\r\n                            if (tweet.AMPLITUDE > this.alarmThreshold1) {\r\n                                this.$refs.button[index].state = 1\r\n                            } else if (tweet.AMPLITUDE > this.alarmThreshold2) {\r\n                                this.$refs.button[index].state = 2\r\n                            } else if (tweet.AMPLITUDE > this.alarmThreshold3) {\r\n                                this.$refs.button[index].state = 3\r\n                            } else if (tweet.AMPLITUDE > -1) {\r\n                                this.$refs.button[index].state = 4\r\n                            } else {\r\n                                this.$refs.button[index].state = 0\r\n                            }\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.error = error\r\n                    console.log(this.error)\r\n                }\r\n            })\r\n\r\n            // 从数据库获取的位置 mac地址 所属协调器信息\r\n            client.getMatchData((error, matchData)=> {\r\n                if (error.length == 0) {\r\n                    this.matchData = matchData\r\n                } else {\r\n                    this.error = error\r\n                    console.log(error)\r\n                }\r\n            })\r\n\r\n            // 从数据库获取的协调器信息\r\n            client.getCoordinatorData((error, coordinatorData)=> {\r\n                if (error.length == 0) {\r\n                    // 排序后赋值给coordinatorData\r\n                    this.coordinatorData = coordinatorData.sort(function(m, n) {\r\n                        if (m.MACADDRESS < n.MACADDRESS) return -1\r\n                        else if (m.MACADDRESS > n.MACADDRESS) return 1\r\n                        else return 0\r\n                    })\r\n                } else {\r\n                    this.error = error\r\n                    console.log(error)\r\n                }\r\n            })\r\n        },\r\n        mounted() {\r\n            setInterval(()=> {\r\n                // 根据数据库信息判断按钮颜色\r\n                client.getRecTweets((error, tweets)=> {\r\n                    let index = 0\r\n                    if (error.length == 0) {\r\n                        tweets.forEach((tweet)=> {\r\n                            index = 0\r\n                            index = this.matchIdArr.indexOf(tweet.MACADDRESS)\r\n                            if (index >= 0) {\r\n                                if (tweet.AMPLITUDE > this.alarmThreshold1) {\r\n                                    this.$refs.button[index].state = 1\r\n                                } else if (tweet.AMPLITUDE > this.alarmThreshold2) {\r\n                                    this.$refs.button[index].state = 2\r\n                                } else if (tweet.AMPLITUDE > this.alarmThreshold3) {\r\n                                    this.$refs.button[index].state = 3\r\n                                } else if (tweet.AMPLITUDE > -1) {\r\n                                    this.$refs.button[index].state = 4\r\n                                } else {\r\n                                    this.$refs.button[index].state = 0\r\n                                }\r\n                            }\r\n                        })\r\n                    } else {\r\n                        this.error = error\r\n                        console.log(this.error)\r\n                    }\r\n                })\r\n            }, 100)   \r\n        },\r\n        watch: {\r\n            form: {\r\n                deep: true,\r\n                handler() {\r\n                    this.alertDialog = true\r\n                    this.matchArr.forEach((arr)=> {\r\n                        arr.forEach((obj)=> {\r\n                            if (obj.INSTALLADDRESS === this.form.selector) {\r\n                                this.macaddress = obj.MACADDRESS\r\n                                return\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n            },\r\n            matchArr: {\r\n                deep: true,\r\n                handler() {\r\n                    this.form.selector = this.matchArr[0][0].INSTALLADDRESS\r\n                    this.macaddress = this.matchArr[0][0].MACADDRESS\r\n                }\r\n            },\r\n            macaddress() {\r\n                // 当切换选项也会触发提交\r\n                this.alertDialog = true\r\n            },\r\n            // refresh变化时更新matchData、classificationArr、matchArr、matchIdArr\r\n            refresh() {\r\n                // 从数据库获取的位置 mac地址 所属协调器信息\r\n                client.getMatchData((error, matchData)=> {\r\n                    if (error.length == 0) {\r\n                        this.matchData = matchData\r\n                    } else {\r\n                        this.error = error\r\n                        console.log(error)\r\n                    }\r\n                })\r\n                // 全部按钮置灰色\r\n                /* for (let i = 0; i < this.$refs.button.length; i++) {\r\n                    this.$refs.button[i].state = 0\r\n                } */\r\n                client.getRecTweets((error, tweets)=> {\r\n                    let index = 0\r\n                    if (error.length == 0) {\r\n                        tweets.forEach((tweet)=> {\r\n                            index = 0\r\n                            index = this.matchIdArr.indexOf(tweet.MACADDRESS)\r\n                            if (index >= 0) {\r\n                                if (tweet.AMPLITUDE > this.alarmThreshold1) {\r\n                                    this.$refs.button[index].state = 1\r\n                                } else if (tweet.AMPLITUDE > this.alarmThreshold2) {\r\n                                    this.$refs.button[index].state = 2\r\n                                } else if (tweet.AMPLITUDE > this.alarmThreshold3) {\r\n                                    this.$refs.button[index].state = 3\r\n                                } else if (tweet.AMPLITUDE > -1) {\r\n                                    this.$refs.button[index].state = 4\r\n                                } else {\r\n                                    this.$refs.button[index].state = 0\r\n                                }\r\n                            }\r\n                        })\r\n                    } else {\r\n                        this.error = error\r\n                        console.log(this.error)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n\r\n    h2 {\r\n        text-align: center;\r\n        font-size: 25px;\r\n        margin-top: 25px;\r\n        margin-bottom: 25px;\r\n    }\r\n\r\n    .el-header, .el-footer {\r\n        background-color: #B3C0D1;\r\n        color: #333;\r\n        text-align: center;\r\n        line-height: 60px;\r\n        font-size: 35px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .el-aside {\r\n        background-color: #D3DCE6;\r\n        color: #333;\r\n        text-align: center;\r\n        line-height: 30px;\r\n    }\r\n\r\n    .el-main {\r\n        background-color: #E9EEF3;\r\n        color: #333;\r\n        text-align: center;\r\n        line-height: 50px;\r\n    }\r\n\r\n    /* body > .el-container {\r\n        \r\n    } */\r\n\r\n    .el-container:nth-child(5) .el-aside,\r\n    .el-container:nth-child(6) .el-aside {\r\n        line-height: 260px;\r\n    }\r\n\r\n    .el-container:nth-child(7) .el-aside {\r\n        line-height: 320px;\r\n    }\r\n\r\n    .coordinatorPart {\r\n        width: 90%;\r\n        margin: auto;\r\n        margin-top: 10px;\r\n        border: 2px groove red; \r\n    }\r\n\r\n    .btnPart {\r\n        width: 90%;\r\n        margin: auto;\r\n        margin-top: 10px;\r\n        border: 2px groove blue; \r\n    }\r\n\r\n    /* 设置按钮样式 */\r\n    .settingBtn {\r\n        cursor: pointer;\r\n        width: 200px;\r\n        width: 100px;\r\n        margin-right: 50px;\r\n        margin-bottom: 25px;\r\n    }\r\n</style>"]}]}